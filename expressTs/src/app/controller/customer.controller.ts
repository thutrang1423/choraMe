import { Request, Response } from "express";
import db from "../../config/db";
import { RowDataPacket } from "mysql2";

// üîç L·∫•y gi·ªè h√†ng c·ªßa ng∆∞·ªùi d√πng hi·ªán t·∫°i
export const getCart = async (req: Request, res: Response) => {
  const userId = req.user?.id;

  try {
    const [rows] = await db.execute<RowDataPacket[]>(
      "SELECT c.id, c.quantity, p.id as productId, p.title, p.price, p.salePrice, p.image FROM carts c JOIN products p ON c.productId = p.id WHERE c.userId = ?",
      [userId]
    );

    return res.status(200).json(rows);
  } catch (err) {
    console.error("L·ªói khi l·∫•y gi·ªè h√†ng:", err);
    return res.status(500).json("L·ªói server khi l·∫•y gi·ªè h√†ng");
  }
};

// ‚ûï Th√™m s·∫£n ph·∫©m v√†o gi·ªè h√†ng
export const addToCart = async (req: Request, res: Response) => {
  const userId = req.user?.id;
  const { productId, quantity } = req.body;

  try {
    // Ki·ªÉm tra s·∫£n ph·∫©m ƒë√£ c√≥ trong gi·ªè ch∆∞a
    const [rows] = await db.execute<RowDataPacket[]>(
      "SELECT * FROM carts WHERE userId = ? AND productId = ?",
      [userId, productId]
    );

    if (rows.length > 0) {
      // N·∫øu ƒë√£ c√≥ ‚ûú c·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng
      await db.execute(
        "UPDATE carts SET quantity = quantity + ? WHERE userId = ? AND productId = ?",
        [quantity, userId, productId]
      );
    } else {
      // N·∫øu ch∆∞a c√≥ ‚ûú th√™m m·ªõi
      await db.execute(
        "INSERT INTO carts (userId, productId, quantity) VALUES (?, ?, ?)",
        [userId, productId, quantity]
      );
    }

    return res.status(200).json("ƒê√£ th√™m v√†o gi·ªè h√†ng");
  } catch (err) {
    console.error("L·ªói khi th√™m v√†o gi·ªè h√†ng:", err);
    return res.status(500).json("L·ªói server khi th√™m v√†o gi·ªè h√†ng");
  }
};

// üé® Truy c·∫≠p trang ph√¢n t√≠ch m√†u c√° nh√¢n (c√≥ th·ªÉ tr·∫£ v·ªÅ d·ªØ li·ªáu n·∫øu c·∫ßn)
export const accessPersonalColor = async (_req: Request, res: Response) => {
  return res.status(200).json("Trang ph√¢n t√≠ch m√†u c√° nh√¢n");
};
